@using LegacyVideos.WebApp.Helpers
@model LegacyVideos.WebApp.Models.UpdateMovieModel

@{
    ViewData["Title"] = "Update Movie";
}
<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm("UpdateMovieSubmit", "Movies", FormMethod.Post))
{
	@Html.HiddenFor(model => model.Movie.Id)

	<div class="mb-3">
		<div class="form-floating">
			@Html.TextBoxFor(model => model.Movie.Title, new { @class = "form-control", placeholder = "Enter title here" })
			@Html.LabelFor(model => model.Movie.Title, "Title")
		</div>
	</div>
	
	<div class="mb-3">
		<div class="form-floating">
			@Html.TextAreaFor(model => model.Movie.Description, new { @class = "form-control", placeholder = "Enter description here" })
			@Html.LabelFor(model => model.Movie.Description, "Description")
		</div>
	</div>
	
	<div class="mb-3">
		@Html.LabelFor(model => model.Movie.MovieType, "Movie Type", new { @class = "form-label" })
		@Html.DropDownListFor(model => model.Movie.MovieType, EnumHelper.EnumMovieTypeToList(), new { @class = "form-control"})
	</div>
	
	<div class="mb-3">
		@Html.LabelFor(model => model.Movie.Duration, "Duration", new { @class = "form-label" })
		<input type="number" name="durationInput" min="0" max="20" value="@(Model.Movie.Duration)" class="form-control" disabled />
		@Html.TextBoxFor(model => model.Movie.Duration, new { type = "range", min = 0, max = 240, @class = "form-range", oninput="this.form.durationInput.value=this.value"})
	</div>
	
	<div class="mb-3">
		@Html.LabelFor(model => model.Movie.ReleaseDate, "Release Date", new { @class = "form-label" })
		@Html.TextBoxFor(model => model.Movie.ReleaseDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
	</div>
	
	<div class="mb-3">
		@Html.LabelFor(model => model.Movie.AddedDate, "Added Date", new { @class = "form-label" })
		@Html.TextBoxFor(model => model.Movie.AddedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
	</div>
	
	<div class="mb-3">
		<div class="form-check form-switch">
			@Html.CheckBoxFor(model => model.Movie.Owned, new { @class = "form-check-input" })
			@Html.LabelFor(model => model.Movie.Owned, new { @class = "form-check-label" })
		</div>
	</div>
	
	<button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target=@($"#modal_{Model.Movie.Id}")>
		Delete Movie
	</button>

	<!-- Modal -->
	<div class="modal fade" id=@($"modal_{Model.Movie.Id}") tabindex="-1" aria-labelledby=@($"modal_label_{Model.Movie.Id}") aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id=@($"modal_label_{Model.Movie.Id}")>Delete movie?</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					Do you want to delete the movie '@(Model.Movie.Title)'?
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-dark" data-bs-dismiss="modal">No</button>
					@Html.ActionLink(linkText: "Yes",  actionName: "DeleteMovie",  routeValues: new { id = Model.Movie.Id }, htmlAttributes: new { @class = "btn btn-danger" })
				</div>
			</div>
		</div>
	</div>
	<button id="updateMovieSubmit" type="submit" name="UpdateMovieSubmit" formmethod="post" class="btn btn-dark">Update Movie</button>
}
